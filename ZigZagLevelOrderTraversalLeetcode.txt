/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
      List<List<Integer>> finallist = new ArrayList<>();
        if(root == null){
            return finallist;
        }

        Queue<TreeNode> que= new LinkedList<>();
        que.add(root);
        boolean check = true;
        while(!que.isEmpty()){
            int size = que.size();
            List<Integer> innerList = new ArrayList<>();
         for(int i = 0; i < size;i++){
            TreeNode node = que.poll();
            innerList.add(node.val);
            if(node.left != null){
                que.add(node.left);
            }
            if(node.right != null){
                que.add(node.right);
            }
         }
        if(!check){
            Collections.reverse(innerList);
            finallist.add(innerList);
        }
        else{
            finallist.add(innerList);
        }
        check = !check ;
        }
         return finallist;
    }
} 